/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ..\..\public\gamebccartridge.glb -t 
Author: Bob (https://sketchfab.com/MeBob)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/gameboy-cartridge-lowpoly-8b9728eab16c4056ac2636ae7f0f038f
Title: Gameboy Cartridge lowpoly
*/

import * as THREE from "three";
import React, { useEffect, useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";

var texLoader = new THREE.TextureLoader();
var newTexture = texLoader.load("./newtext.png");

type GLTFResult = GLTF & {
  nodes: {
    Card_Low__0: THREE.Mesh;
  };
  materials: {
    ["Scene_-_Root"]: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export default function CartridgeModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/gamebccartridge.glb") as GLTFResult;
  const [hovered, setHovered] = useState(false);
  const groupRef = useRef<any>();

  useEffect(() => {
    document.body.style.cursor = hovered ? "pointer" : "auto";
  }, [hovered]);

  useFrame((state) => {
    const scaleUp = THREE.MathUtils.lerp(
      groupRef.current.scale.z,
      hovered ? 1.2 : 1,
      0.17
    );
    groupRef.current.scale.set(scaleUp, scaleUp, scaleUp);
  });

  return (
    <group {...props} dispose={null} ref={groupRef}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.083}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <mesh
            geometry={nodes.Card_Low__0.geometry}
            material={materials["Scene_-_Root"]}
            position={[0, 50, 0]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[88.487, 15.448, 100]}
            onPointerOver={() => setHovered(true)}
            onPointerOut={() => setHovered(false)}
          >
            <meshStandardMaterial
              map={newTexture}
              attach={"material"}
              roughness={0.3}
              alphaTest={0.4}
              toneMapped={true}
              transparent={true}
            />
          </mesh>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/gamebccartridge.glb");
